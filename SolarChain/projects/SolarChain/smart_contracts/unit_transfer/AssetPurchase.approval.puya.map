{
  "version": 3,
  "sources": [
    "unit_contract.py"
  ],
  "mappings": ";;;;;;;;;AAIA;;;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAAA;AAIK;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAIK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAJL;;AAAA;;;;;;;;;AAAA;AAAA;AAIA;;;AAQe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.approval_program",
      "params": {},
      "block": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "callsub": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "8": {
      "op": "return",
      "stack_out": []
    },
    "9": {
      "subroutine": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "12": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "14": {
      "op": "bz __puya_arc4_router___bare_routing@5",
      "stack_out": []
    },
    "17": {
      "op": "pushbytes 0x597a96b5 // method \"purchase(account,uint64,string)string\""
    },
    "23": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(purchase(account,uint64,string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(purchase(account,uint64,string)string)",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "match __puya_arc4_router___purchase_route@2",
      "stack_out": []
    },
    "30": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "31": {
      "retsub": true,
      "op": "retsub"
    },
    "32": {
      "block": "__puya_arc4_router___purchase_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "34": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "35": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "36": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "38": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "39": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "42": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "43": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "45": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "48": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "49": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "52": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "55": {
      "callsub": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.purchase",
      "op": "callsub purchase",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "58": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "59": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "60": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "61": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "64": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "65": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "66": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "72": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "73": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "74": {
      "op": "log",
      "stack_out": []
    },
    "75": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "76": {
      "retsub": true,
      "op": "retsub"
    },
    "77": {
      "block": "__puya_arc4_router___bare_routing@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "79": {
      "op": "bnz __puya_arc4_router___after_if_else@9",
      "stack_out": []
    },
    "82": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "84": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "85": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "86": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "87": {
      "retsub": true,
      "op": "retsub"
    },
    "88": {
      "block": "__puya_arc4_router___after_if_else@9",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "89": {
      "retsub": true,
      "op": "retsub"
    },
    "90": {
      "subroutine": "smart_contracts.unit_transfer.unit_contract.AssetPurchase.purchase",
      "params": {
        "buyer#0": "bytes",
        "amount#0": "uint64",
        "test#0": "bytes"
      },
      "block": "purchase",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "93": {
      "op": "pushbytes \"Buying units from an account with bal: \"",
      "defined_out": [
        "\"Buying units from an account with bal: \""
      ],
      "stack_out": [
        "\"Buying units from an account with bal: \""
      ]
    },
    "134": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Buying units from an account with bal: \"",
        "test#0 (copy)"
      ],
      "stack_out": [
        "\"Buying units from an account with bal: \"",
        "test#0 (copy)"
      ]
    },
    "136": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "137": {
      "retsub": true,
      "op": "retsub"
    }
  }
}